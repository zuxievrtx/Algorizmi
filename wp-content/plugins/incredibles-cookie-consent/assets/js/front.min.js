(function () {
  const expiryDate = new Date();
  expiryDate.setMonth(expiryDate.getMonth() + 6);
  function getUniqueId() {
    const userIdCookie = document.cookie
      .split(";")
      .find((cookie) => cookie.trim().startsWith("icr-cc-user-id="));
    let userId = userIdCookie ? userIdCookie.split("=")[1] : null;
    if (!userId) {
      if (window.crypto.randomUUID) {
        userId = window.crypto.randomUUID();
      } else {
        userId = "10000000-1000-4000-8000-100000000000".replace(/[018]/g, (c) =>
          (
            +c ^
            (window.crypto.getRandomValues(new Uint8Array(1))[0] &
              (15 >> (+c / 4)))
          ).toString(16)
        );
      }
      document.cookie =
        "icr-cc-user-id=" +
        userId +
        ";path=/;expires=" +
        expiryDate.toUTCString();
    }
    return userId;
  }
  const userId = getUniqueId();
  let consentData = {
    necessary: true,
    functional: false,
    performance: false,
    advertising: false,
  };
  const consentCookie = document.cookie
    .split(";")
    .find((cookie) => cookie.trim().startsWith("icr-cc-consent="));
  if (consentCookie) {
    consentData = JSON.parse(consentCookie.split("=")[1]);
  }
  function saveConsent(consent, type = "decline") {
    document.cookie =
      "icr-cc-consent=" +
      JSON.stringify(consent) +
      ";path=/;expires=" +
      expiryDate.toUTCString();
    document.cookie =
      "icr-cc-user-id=" +
      userId +
      ";path=/;expires=" +
      expiryDate.toUTCString();
    document.querySelector(".js-icr-cc").classList.remove("is-opened");
    fetch(icrAjaxUrl, {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded;" },
      body:
        "action=icr_save_consent&nonce=" +
        icrNonce +
        "&userId=" +
        userId +
        "&type=" +
        type +
        "&consentData=" +
        JSON.stringify(consent),
    })
      .then((response) => response.json())
      .then((data) => {
        gtagConsentUpdate(consent, "update");
      })
      .catch((error) => console.error("Error:", error));
  }
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  function gtagConsentUpdate(consent, type = "default") {
    gtag("consent", type, {
      ad_personalization: consent.advertising ? "granted" : "denied",
      ad_storage: consent.advertising ? "granted" : "denied",
      ad_user_data: consent.advertising ? "granted" : "denied",
      analytics_storage: consent.performance ? "granted" : "denied",
      functionality_storage: consent.functional ? "granted" : "denied",
      personalization_storage: consent.functional ? "granted" : "denied",
      security_storage: consent.necessary ? "granted" : "denied",
    });
  }
  gtagConsentUpdate(consentData, "default");
  document.addEventListener("DOMContentLoaded", function () {
    if (consentCookie) {
      document.querySelector(".js-icr-cc-functional-input").checked =
        consentData.functional;
      document.querySelector(".js-icr-cc-performance-input").checked =
        consentData.performance;
      document.querySelector(".js-icr-cc-advertising-input").checked =
        consentData.advertising;
    } else {
      const delay = Number(
        document.querySelector(".js-icr-cc").getAttribute("data-delay")
      );
      setTimeout(function () {
        document.querySelector(".js-icr-cc").classList.add("is-opened");
      }, delay * 1e3);
    }
    document.querySelectorAll(".js-icr-cc-open-btn").forEach(function (button) {
      button.addEventListener("click", function (e) {
        e.preventDefault();
        document
          .querySelector(".js-icr-cc")
          .classList.add("is-opened", "has-customization");
      });
    });
    document
      .querySelector(".js-icr-cc-accept-btn")
      .addEventListener("click", function () {
        consentData = {
          necessary: true,
          functional: true,
          performance: true,
          advertising: true,
        };
        saveConsent(consentData, "accept");
      });
    document
      .querySelector(".js-icr-cc-decline-btn")
      .addEventListener("click", function () {
        consentData = {
          necessary: true,
          functional: false,
          performance: false,
          advertising: false,
        };
        saveConsent(consentData, "decline");
      });
    document
      .querySelector(".js-icr-cc-save-btn")
      .addEventListener("click", function () {
        const functional = document.querySelector(
          ".js-icr-cc-functional-input"
        ).checked;
        const performance = document.querySelector(
          ".js-icr-cc-performance-input"
        ).checked;
        const advertising = document.querySelector(
          ".js-icr-cc-advertising-input"
        ).checked;
        consentData = {
          necessary: true,
          functional: functional,
          performance: performance,
          advertising: advertising,
        };
        saveConsent(consentData, "customize");
      });
    document
      .querySelector(".js-icr-cc-customize-btn")
      .addEventListener("click", function () {
        document
          .querySelector(".js-icr-cc")
          .classList.toggle("has-customization");
      });
    document
      .querySelectorAll(".js-icr-cc-toggle-icon")
      .forEach(function (toggle) {
        toggle.addEventListener("click", function () {
          const item = this.closest(".js-icr-cc-cookie-item");
          if (item.classList.contains("is-opened")) {
            item.classList.remove("is-opened");
          } else {
            document
              .querySelectorAll(".js-icr-cc-cookie-item")
              .forEach(function (item) {
                item.classList.remove("is-opened");
              });
            item.classList.add("is-opened");
          }
        });
      });
    document.querySelectorAll(".js-icr-cc").forEach(function (el) {
      el.addEventListener("close", function () {
        el.classList.remove("is-opened");
      });
    });
  });
})();
